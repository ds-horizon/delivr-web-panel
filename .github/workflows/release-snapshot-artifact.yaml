name: Release Artifact

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      artifact-version:
        required: true
        type: string
      artifactory-url:
        required: false
        default: https://dreamsports.jfrog.io/artifactory
        type: string
      artifact-path:
        required: false
        default: d11-repo/com/dream11
        type: string

jobs:
  upload-artifact:
    runs-on: [self-hosted, linux, X64, codepush-web-dashboard]
    permissions:
      contents: write
    strategy:
      matrix:
        node-version: [20.0.0]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up NVM
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm -v
          nvm install 20.0.0
          nvm use 20.0.0
          node -v # Verify Node.js version

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.0.0'

      - name: Set Consul and Vault token
        shell: bash
        run: |
          echo "CONSUL_TOKEN=${{ secrets.CONSUL_TOKEN }}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" >> $GITHUB_ENV

      - name: Upload Artifact
        id: upload-artifact
        uses: dream11/publish-artifact@v1
        with:
          artifact-name: ${{ inputs.artifact-name }}
          artifact-version: ${{ inputs.artifact-version }}
          artifactory-type: jfrog
          artifactory-username: ${{ secrets.JFROG_USERNAME }}
          artifactory-password: ${{ secrets.JFROG_PASSWORD }}
          artifactory-url: ${{ inputs.artifactory-url }}
          artifact-path: ${{ inputs.artifact-path }}

      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            Artifact uploaded to jfrog for service: ${{ inputs.artifact-name }} with version: ${{ inputs.artifact-version }}